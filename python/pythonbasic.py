# 파이썬의 특징
#
# 성능은 조금 느리지만 생산성이 높음(c언어에 비해 개발기간이 짧음)
# 플랫폼에 독립적이어서 어느 운영체제에서나 사용가능, 웹에 유리함(이기종간 통신)
# 인터프리터 방식으로 동작하는 스크립트 언어 <-> 컴파일 언어
# 실무에 필요한 고급 라이브러리 대거 포함(배터리 포함 철학)
# 객체지향적, 클래스를 지원
# C 언어와의 접착성이 좋아 혼합 프로그래밍이 가능함
# (고성능 엔진은 C로 만들고 자주 바뀌는 부분만 파이썬으로 작성)
#
# 파이썬의 활용
# GOOD:유틸리티 제작, 웹 프로그래밍, 임베디드(Iot 초소형 컴퓨터 프로그래밍), DB
# BAD: 시스템 프로그래밍, 고성능 응용(게임...), GUI, 모바일

## ctrl + / -> 블록 전체가 주석(참고문)으로 간주됨
##  ctrl shift f10, alt f10, shift f10

## 자료구조
## list tuple dictionary set
## 대괄호 [] 는 list : “”로 자료들을 구분하여 저장 [“”, “”, “”]
## 소괄호 () 는 tuple
## 중괄호 {} 는 dictionary, set

## 변수 = 데이터 ==> 데이터를 변수에 저장
# a =1 # 같다라는 의미 x, assign( 할당, 왼쪽의 변수에 오른쪽의 값을 할달해라)

# for lang in languages:
#     if lang in ['python', 'perl']:
#         print("%6s need interpreter" % lang)
#     elif lang in ['c', 'java']:
#         print("%6s need compiler" % lang)
#     else:
#         print("should not reach here")

## 코드블록: 들여쓰기가 동일한 코드 집합
# if a==3:
#     print('3');
#     print("three");
#     print("3과 같아요")
# if a==4:
#     print('4');
#     print("four");
# print("4와 같아요") #코드블록 밖

##연산자
# print(1-1);print(1*1);print(5/3);print(1+1);
# print(6//3) # //: 몫만 보여짐, 소수점 이하는 버림
# print(6//3.0) # 2.0, 정수로 나누는지 실수로 나누는지에 따라 다름
# print(7%4) # %:나머지 연산자
# print(2**2) # **: 거듭제곱연산
# print(2**10000) #2의 10000승
#print(divmod(9,4)) #9를 4로 나눈 몫과 나머지
## 함수(인수1, 인수2) divmod는 함수, 인수: 함수 안에 기술된 수
## 인수는 있을수도 없을수도 있다
## divmod 함수는 2개의 인수가 필요하다
## 인수1은 피잿수 인수2는 잿수
## 결과가 (2, 1) 소괄호로 묶여있음. 즉, 자료구조가 tuple
## 요소(element): (2,1) 튜플에서 2와 1은 각각 요소