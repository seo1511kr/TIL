raw_welfare$log_wage<-log(raw_welfare$wage_m+1) #log_wage 변수 생성
#2.age: 이상치 없음
dev.off()
par(mfrow=c(2,1))
box_age<-boxplot(raw_welfare$age)
plot(density(raw_welfare$age))
box_age$out
str(raw_welfare)
dev.off()
library(gridExtra)
a<-ggplot(raw_welfare,aes(as.factor(job.y)))+
geom_bar()
b<-ggplot(raw_welfare,aes(as.factor(marriage.y)))+
geom_bar()
c<-ggplot(raw_welfare,aes(as.factor(sex)))+
geom_bar()
d<-ggplot(raw_welfare,aes(as.factor(religion)))+
geom_bar()
e<-ggplot(raw_welfare,aes(as.factor(residence.y)))+
geom_bar()
grid.arrange(a,b,c,d,e, nrow=3,ncol=2)
#==============================================================================
#범주형 자료 시각화
install.packages('gridExtra')
library(gridExtra)
str(raw_welfare)
dev.off()
a<-ggplot(raw_welfare,aes(as.factor(job.y)))+
geom_bar()
b<-ggplot(raw_welfare,aes(as.factor(marriage.y)))+
geom_bar()
c<-ggplot(raw_welfare,aes(as.factor(sex)))+
geom_bar()
d<-ggplot(raw_welfare,aes(as.factor(religion)))+
geom_bar()
e<-ggplot(raw_welfare,aes(as.factor(residence.y)))+
geom_bar()
grid.arrange(a,b,c,d,e, nrow=3,ncol=2)
temp<-raw_welfare %>%
group_by(job.y) %>%
summarise(mean.wage_m=mean(wage_m,na.rm=T),N=n()) %>%
arrange(-N,mean.wage_m)
head(temp,3)
temp %>%  #직종별 임금 살펴보기:(top3:고위공무원,임원,보험 및 금융, 의료)
arrange(-mean.wage_m) %>%
head(3)
dev.off()
aggregate(data=raw_welfare,wage_m~residence.y+sex,
FUN=function(x) mean(x,na.rm=T)) %>%
ggplot(aes(residence.y,wage_m,fill=as.factor(sex)))+
geom_bar(stat='identity')+
facet_grid(sex ~ .)
str(upperout_wage)
upperout_wage %>%
group_by(residence.y)
str(lowerout_wage)
#지역별 평균임금, 인원
temp1<-raw_welfare %>%
group_by(residence.y) %>%
summarise(N=n(),mean.wage_m=mean(wage_m,na.rm=T)) %>%
as.data.frame()
#지역별 극빈층 평균임금, 인원, 전체인원대비 비율
temp2<-lowerout_wage %>%
group_by(residence.y) %>%
summarise(N=n(),mean.wage_m=mean(wage_m)) %>%
as.data.frame()
temp2 %>%
mutate(prop_lower=(N/temp1[[2]])*100) %>%
arrange(prop_lower)
dev.off()
raw_welfare %>%
ggplot(aes(residence,wage_m,group=residence))+
geom_boxplot()+
facet_grid(sex ~ .)
sum(is.na(raw_welfare$wage_m))#3095개
sum(is.na(raw_welfare$wage_m))/nrow(raw_welfare) #NA비율 0.4110772 거의 절반
# 직종, 성별이 wage_m과 높은 상관관계를 보임
library(GGally)
ggcorr(raw_welfare,nbreaks = 5,label = T)
str(raw_welfare)
model1<-raw_welfare
features<-c('sex','marriage','religion','job','residence','age')
features_cat<-features[-6]
label<-c('wage_m')
#cat변수 onehotencoding
head(model1[features_cat])
for(i in features_cat){
iter<-unique(model1[[i]])
for(value in iter){
newcol<-paste(i,value,sep='')
model1[newcol]<-ifelse(model1[i]==value,1,0)
}
}
str(model1)
origin_age<-model1$age
model1$age<-scale(model1$age)
data<-model1[-c(1:5,7,9,10,11)]
train<-data[!is.na(data$wage_m),]
test<-data[is.na(data$wage_m),]
set.seed(1234)
len<-nrow(train)
sample_idx<-sample(1:len,len*0.3)
train_train<-train[-sample_idx,-c(1,3)]
train_test<-train[sample_idx,-c(1,3)]
train_train_labels<-train[-sample_idx,c(1,3)]
train_test_labels<-train[sample_idx,c(1,3)]
library(class)
#score는 rmsle를 사용(log(predict/real)^2의평균의 루트
scores<-c()
for(i in seq(1,25,2)){
predict_wage_m<-as.numeric(knn(train_train,train_test,
cl=train_train_labels[[1]],k=i))
scores<-c(scores,sqrt(mean((log(predict_wage_m+1)-log(train_test_labels[[1]]+1))^2)))
}
min(scores)
seq(1,25,2)[which.min(scores)]
model2<-raw_welfare
features<-c('sex','job','age')
features_cat<-features[-3]
label<-c('wage_m','log_wage')
#cat변수 onehotencoding
head(model2[features_cat])
for(i in features_cat){
iter<-unique(model2[[i]])
for(value in iter){
newcol<-paste(i,value,sep='')
model2[newcol]<-ifelse(model2[i]==value,1,0)
}
}
str(model2)
#age 표준화
model2$age<-scale(model2$age)
features
names(model2)
data<-model2[-c(1:5,7,9:11)]
str(data)
train<-data[!is.na(data$wage_m),]
test<-data[is.na(data$wage_m),]
set.seed(1234)
len<-nrow(train)
sample_idx<-sample(1:len,len*0.3)
train_train<-train[-sample_idx,-c(1,3)]
train_test<-train[sample_idx,-c(1,3)]
train_train_labels<-train[-sample_idx,c(1,3)]
train_test_labels<-train[sample_idx,c(1,3)]
library(class)
#score는 rmsle를 사용(log(predict/real)^2의평균의 루트
scores<-c()
for(i in seq(1,25,2)){
predict_wage_m<-as.numeric(knn(train_train,train_test,
cl=train_train_labels[[1]],k=i))
scores<-c(scores,sqrt(mean((log(predict_wage_m+1)-log(train_test_labels[[1]]+1))^2)))
}
min(scores)
seq(1,25,2)[which.min(scores)]
#k:15일때 rmsle 1.01495 낮을수록 좋음, 아주 안좋은 모델
#model3 kmeasn 후 그룹 평균값으로
str(raw_welfare)
model3<-raw_welfare
features<-c('sex','marriage','religion','job','residence','age')
features_cat<-features[-6]
label<-c('wage_m')
#cat변수 onehotencoding
head(model3[features_cat])
for(i in features_cat){
iter<-unique(model3[[i]])
for(value in iter){
newcol<-paste(i,value,sep='')
model3[newcol]<-ifelse(model3[i]==value,1,0)
}
}
str(model3)
#age 표준화
model3$age<-scale(model3$age)
data<-model3[-c(1:5,7,9,10,11)]
sqrt(nrow(raw_welfare))
wiss<-c()
set.seed(1234)
for(i in 1:100) wiss[i]<-kmeans(data[-c(1,3)],i)$tot.withinss
plot(1:100,wiss,xlab='centers_N',ylab='tot.withinss',
main = 'elbow_K',type='o')
#k:17~23정도가 적절해보임
names(data)
cluster_welfare<-kmeans(data[-c(1,3)],21)
data$cluster1<-cluster_welfare$cluster
train<-data[!is.na(data$wage_m),]
test<-data[is.na(data$wage_m),]
set.seed(1234)
len<-nrow(train)
sample_idx<-sample(1:len,len*0.3)
train_train<-train[-sample_idx,]
train_test<-train[sample_idx,]
train_train_labels<-train[-sample_idx,c(1,3)]
train_test_labels<-train[sample_idx,c(1,3)]
train %>%
ggplot(aes(y=wage_m,group=cluster1,fill=as.factor(cluster1)))+
geom_boxplot(outlier.shape=16, outlier.colour="red",)+
ggtitle('클러스터별 임금 분포')
predict_wage<-aggregate(data=train_train,wage_m ~ cluster1,
FUN=function(x) mean(x,na.rm=T))
temp<-left_join(train_test,predict_wage,by='cluster1')
sqrt(sum((log(temp['wage_m.y']+1)-log(temp['wage_m.x']+1))^2)/nrow(temp))
#test 예측==============================================
names(test)
predict_wage<-aggregate(data=train,wage_m ~ cluster1,
FUN=function(x) mean(x,na.rm=T))
temp<-left_join(test,predict_wage,by='cluster1')
temp$wage_m.x<-temp$wage_m.y
temp$wage_m.y<-NULL
raw_welfare$wage_m[is.na(raw_welfare$wage_m)]<-temp$wage_m.x
# 분석시작
#===============================================================================
#model1: 모든 cat변수 onehot인코딩, age는 표준화
model1$wage_m[is.na(model1$wage_m)]<-temp$wage_m.x
#1. 성별에 따른 월급차이
# $`1`(남자)
# Min. 1st Qu.  Median    Mean 3rd Qu.    Max.
# 30.0   152.2   255.4   285.8   373.1  1250.0
#
# $`2`(여자)
# Min. 1st Qu.  Median    Mean 3rd Qu.    Max.
# 29.0   103.8   139.1   154.4   189.8  1000.0
with(model1,tapply(wage_m,sex,summary))
model1 %>%
group_by(sex) %>%
ggplot(aes(y=wage_m,group=as.factor(sex),fill=as.factor(sex)))+
geom_boxplot()
train %>%
ggplot(aes(y=wage_m,group=cluster1,fill=as.factor(cluster1)))+
geom_boxplot(outlier.shape=16, outlier.colour="red",)+
ggtitle('클러스터별 임금 분포')
plot(1:100,wiss,xlab='centers_N',ylab='tot.withinss',
main = 'elbow_K',type='o')
train %>%
ggplot(aes(y=wage_m,group=cluster1,fill=as.factor(cluster1)))+
geom_boxplot(outlier.shape=16, outlier.colour="red",)+
ggtitle('클러스터별 임금 분포')
model1 %>%
group_by(sex) %>%
ggplot(aes(y=wage_m,group=as.factor(sex),fill=as.factor(sex)))+
geom_boxplot()
model1 %>%
group_by(sex) %>%
ggplot(aes(y=wage_m,x=origin_age,col=as.factor(sex)))+
geom_point()+
stat_smooth()
model1$origin_age<-origin_age
model1 %>%
group_by(sex) %>%
ggplot(aes(y=wage_m,x=origin_age,col=as.factor(sex)))+
geom_point()+
stat_smooth()
cuts<-with(model1,tapply(origin_age,sex,summary))[[1]][-4]
model1$agecat<-with(model1,cut(origin_age,breaks =c(18,30,40,50,60,100),include.lowest = T ))
aggregate(data=model1,wage_m~agecat+sex,mean) %>%
arrange(sex,-wage_m)
#     agecat sex   wage_m  남자는 40~50이 최고
# 1   (40,50]   1 370.3013
# 2   (50,60]   1 339.2704
# 3   (30,40]   1 313.9060
# 4   [18,30]   1 190.4619
# 5  (60,100]   1 170.1396
# 6   (30,40]   2 202.8838 여자는 30~40이 최고
# 7   (40,50]   2 188.7750
# 8   [18,30]   2 172.6190
# 9   (50,60]   2 158.4980
# 10 (60,100]   2 102.2563
temp<-aggregate(data=model1,wage_m~agecat+sex,mean) %>%
arrange(sex,-wage_m)
temp1<-temp[temp$sex==1,] %>%
arrange(agecat)
temp2<-temp[temp$sex==2,] %>%
arrange(agecat)
temp4<-temp1[3]-temp2[3]
# wage_m(연령대별 성별 평균 임금 차이)
#20대가 가장 적고 40,50대가 가장 많음
# 1  17.84289
# 2 111.02224
# 3 181.52632
# 4 180.77243
# 5  67.88332
#=============================================================================
#3. 월급 평균 상위 5개 직군
aggregate(data=model1,wage_m~job.y,mean) %>%
arrange(-wage_m) %>%
head(5)
#                       job.y             wage_m
model1 %>%
ggplot(aes(y=wage_m,group=religion,fill=as.factor(religion)))+
geom_boxplot()
model1 %>%
ggplot(aes(y=wage_m,group=marriage.y,fill=as.factor(marriage.y)))+
geom_boxplot()
aggregate(data=model1,wage_m~marriage.y,mean) %>%
arrange(-wage_m)
# marriage.y   wage_m
# 1     유배우 243.2363
# 2     비해당 210.4228
# 3       미혼 205.3636
# 4       이혼 205.1285
# 5       별거 155.7439
# 6       기타 119.5977
# 7       사별 106.0018
#중간값은 미혼>유배우
aggregate(data=model1,wage_m~marriage.y,median) %>%
arrange(-wage_m)
# marriage.y    wage_m
# 1     비해당 210.42279
# 2       미혼 198.30625
# 3     유배우 189.81541
# 4       이혼 160.00000
# 5       별거 139.07941
# 6       기타 119.59770
# 7       사별  83.42027
#=============================================================================
#6.권역별 월급: 결측치 채우기 전에는 대전 충남이 1등
# 지금은 평균, 중간값 모두 서울이 1등, 경인이 2등
# 꼴찌는 강원충북
model1 %>%
ggplot(aes(y=wage_m,group=residence.y,fill=as.factor(residence.y)))+
geom_boxplot()
aggregate(data=model1,wage_m~residence.y,mean) %>%
arrange(-wage_m)
# residence.y   wage_m
# 1        서울 247.5801
# 2        경인 237.1495
# 3    부울경남 232.1448
# 4    대전충남 229.0542
# 5    광전제주 210.0819
# 6    대구경북 205.3886
# 7    강원충북 190.4213
#중간값은 미혼>유배우
aggregate(data=model1,wage_m~residence.y,median) %>%
arrange(-wage_m)
# residence.y   wage_m
# 1        서울 201.6800
# 2        경인 197.6309
# 3    대전충남 189.8154
# 4    부울경남 187.5000
# 5    대구경북 160.0000
# 6    광전제주 149.5000
# 7    강원충북 139.0794
#=============================================================================
# 7. 종교 유무/ 결혼여부: 종교 x가 미세하게 높음
library(reshape2)
install.packages('ggrepel')
library(ggrepel)
temp1<-lapply(with(model1,tapply(marriage.y,religion,table)),prop.table)[[1]]
temp2<-lapply(with(model1,tapply(marriage.y,religion,table)),prop.table)[[2]]
dev.off()
rel1<-ggplot(melt(temp1),aes('',value,fill=as.factor(Var1)))+
geom_bar(stat = 'identity')+
theme_void()+
coord_polar('y',start=0)+
geom_text_repel(aes(label=paste0(round(value,2),'%')),
position=position_stack(vjust = 0.5)
)+
scale_fill_viridis_d(option='inferno',alpha = 0.6)+
ggtitle('종교o')
rel2<-ggplot(melt(temp2),aes('',value,fill=as.factor(Var1)))+
geom_bar(stat = 'identity')+
theme_void()+
coord_polar('y',start=0)+
geom_text_repel(aes(label=paste0(round(value,2),'%')),
position=position_stack(vjust = 0.5))+
scale_fill_viridis_d(option='inferno',alpha = 0.6)+
ggtitle('종교x')
grid.arrange(rel1,rel2,nrow=1,ncol=2)
temp1<-lapply(with(model1,tapply(marriage.y,religion,table)),prop.table)[[1]]
temp2<-lapply(with(model1,tapply(marriage.y,religion,table)),prop.table)[[2]]
dev.off()
rel1<-ggplot(melt(temp1),aes('',value,fill=as.factor(Var1)))+
geom_bar(stat = 'identity')+
theme_void()+
coord_polar('y',start=0)+
geom_text_repel(aes(label=paste0(round(value,2),'%')),
position=position_stack(vjust = 0.5)
)+
scale_fill_viridis_d(option='inferno',alpha = 0.6)+
ggtitle('종교o')
rel2<-ggplot(melt(temp2),aes('',value,fill=as.factor(Var1)))+
geom_bar(stat = 'identity')+
theme_void()+
coord_polar('y',start=0)+
geom_text_repel(aes(label=paste0(round(value,2),'%')),
position=position_stack(vjust = 0.5))+
scale_fill_viridis_d(option='inferno',alpha = 0.6)+
ggtitle('종교x')
grid.arrange(rel1,rel2,nrow=1,ncol=2)
library(reshape2)
install.packages('ggrepel')
library(ggrepel)
install.packages("ggrepel")
# residence.y   wage_m
# 1        서울 201.6800
# 2        경인 197.6309
# 3    대전충남 189.8154
# 4    부울경남 187.5000
# 5    대구경북 160.0000
# 6    광전제주 149.5000
# 7    강원충북 139.0794
#=============================================================================
# 7. 종교 유무/ 결혼여부: 종교 x가 미세하게 높음
install.packages('reshape2')
library(reshape2)
temp1<-lapply(with(model1,tapply(marriage.y,religion,table)),prop.table)[[1]]
temp2<-lapply(with(model1,tapply(marriage.y,religion,table)),prop.table)[[2]]
dev.off()
rel1<-ggplot(melt(temp1),aes('',value,fill=as.factor(Var1)))+
geom_bar(stat = 'identity')+
theme_void()+
coord_polar('y',start=0)+
geom_text_repel(aes(label=paste0(round(value,2),'%')),
position=position_stack(vjust = 0.5)
)+
scale_fill_viridis_d(option='inferno',alpha = 0.6)+
ggtitle('종교o')
rel2<-ggplot(melt(temp2),aes('',value,fill=as.factor(Var1)))+
geom_bar(stat = 'identity')+
theme_void()+
coord_polar('y',start=0)+
geom_text_repel(aes(label=paste0(round(value,2),'%')),
position=position_stack(vjust = 0.5))+
scale_fill_viridis_d(option='inferno',alpha = 0.6)+
ggtitle('종교x')
grid.arrange(rel1,rel2,nrow=1,ncol=2)
library(reshape2)
library(ggrepel)
temp1<-lapply(with(model1,tapply(marriage.y,religion,table)),prop.table)[[1]]
temp2<-lapply(with(model1,tapply(marriage.y,religion,table)),prop.table)[[2]]
dev.off()
rel1<-ggplot(melt(temp1),aes('',value,fill=as.factor(Var1)))+
geom_bar(stat = 'identity')+
theme_void()+
coord_polar('y',start=0)+
geom_text_repel(aes(label=paste0(round(value,2),'%')),
position=position_stack(vjust = 0.5)
)+
scale_fill_viridis_d(option='inferno',alpha = 0.6)+
ggtitle('종교o')
rel2<-ggplot(melt(temp2),aes('',value,fill=as.factor(Var1)))+
geom_bar(stat = 'identity')+
theme_void()+
coord_polar('y',start=0)+
geom_text_repel(aes(label=paste0(round(value,2),'%')),
position=position_stack(vjust = 0.5))+
scale_fill_viridis_d(option='inferno',alpha = 0.6)+
ggtitle('종교x')
grid.arrange(rel1,rel2,nrow=1,ncol=2)
# residence.y   wage_m
# 1        서울 201.6800
# 2        경인 197.6309
# 3    대전충남 189.8154
# 4    부울경남 187.5000
# 5    대구경북 160.0000
# 6    광전제주 149.5000
# 7    강원충북 139.0794
#=============================================================================
# 7. 종교 유무/ 결혼여부: 종교 x가 미세하게 높음
library(gridExtra)
temp1<-lapply(with(model1,tapply(marriage.y,religion,table)),prop.table)[[1]]
temp2<-lapply(with(model1,tapply(marriage.y,religion,table)),prop.table)[[2]]
dev.off()
rel1<-ggplot(melt(temp1),aes('',value,fill=as.factor(Var1)))+
geom_bar(stat = 'identity')+
theme_void()+
coord_polar('y',start=0)+
geom_text_repel(aes(label=paste0(round(value,2),'%')),
position=position_stack(vjust = 0.5)
)+
scale_fill_viridis_d(option='inferno',alpha = 0.6)+
ggtitle('종교o')
rel2<-ggplot(melt(temp2),aes('',value,fill=as.factor(Var1)))+
geom_bar(stat = 'identity')+
theme_void()+
coord_polar('y',start=0)+
geom_text_repel(aes(label=paste0(round(value,2),'%')),
position=position_stack(vjust = 0.5))+
scale_fill_viridis_d(option='inferno',alpha = 0.6)+
ggtitle('종교x')
grid.arrange(rel1,rel2,nrow=1,ncol=2)
str(model1)
model1$wage_m_scale<-scale(model1$wage_m)
names(model1)
cluster2<-kmeans(model1[c(13:176,179)],10)
model1$cluster2<-cluster2$cluster
plot(table(model1$cluster2,model1$residence.y))
cluster2$centers
cluster2$size
# 군집별로 특별한 특색이 보이지는 않음
library(gmodels)
a<-model1 %>%
filter(marriage.y=='유배우'|marriage.y=='이혼')
dev.off()
plot(table(a$cluster2,a$marriage.y))
CrossTable(a$marriage.y,a$cluster2,expected = T,
chisq = T)
install.packages('arules')
insurance=read.csv('data/insurance.csv')
str(insurance)
table(insurance$region)
#독립변수와 종속변수의 관계
cor(insurance[c('age','bmi','children','expenses')])
#산포도 행렬
pairs(insurance[c('age','bmi','children','expenses')])
library(psych)
library(psych)
install.packages('psych')
library(psych)
pairs.panels(insurance[c('age','bmi','children','expenses')])
model<-lm(expenses ~ age+children+sex+smoker+region, data=insurance)
summary(model)
